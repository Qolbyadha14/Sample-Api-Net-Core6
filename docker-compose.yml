version: "3.9"
networks:
  api_network:
    external: true
    driver: bridge

services:
    api_traefik:
        image: traefik:v2.6.2
        command:
            - "--api.insecure=true"
            - "--api.dashboard=true"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.web2.address=:8090"
            - "--entrypoints.web3.address=:8091"
            - "--log.filePath=/opt/traefik_2.log"
            - "--log.level=WARN"
            - "--accesslog=true"
            - "--accesslog.filepath=/opt/access_2.log"
            - "--accesslog.bufferingsize=256"
            - "--metrics.prometheus=true"
            - "--metrics.prometheus.addrouterslabels=true"
            - "--entryPoints.metrics.address=:8093"
            - "--metrics.prometheus.entryPoint=metrics"
            - "--ping=true"
        ports:
            # The HTTP port
            #dashboard
            - "8080:8080"
            
            #service
            - "8090:8090"
            - "8091:8091"

            # Metrics
            - "8093:8093"
        environment:
            - TZ=UTC
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ../logs/traefik.log:/opt/traefik.log
            - ../logs/access.log:/opt/access.log
        healthcheck:
            test: traefik healthcheck --ping
            interval: 10s
            timeout: 30s
            retries: 5

        networks:
            - api_network
    
    api_service:
        labels:
          - "traefik.enable=true"
          - "traefik.http.routers.api_service.entrypoints=web2"
          - "traefik.http.services.api_service.loadbalancer.server.port=80"
          - "traefik.http.services.api_service.loadbalancer.server.scheme=http"      
          - "traefik.http.routers.api_service.rule=PathPrefix(`/api`)"
          - "traefik.http.middlewares.api_service_stripprefix.stripprefix.prefixes=/api,/api/"
          - "traefik.http.middlewares.api_service_cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST"
          - "traefik.http.middlewares.api_service_cors.headers.accesscontrolalloworiginlist=*"
          - "traefik.http.middlewares.api_service_cors.headers.accessControlallowheaders=Content-type"
          - "traefik.http.middlewares.api_service_cors.headers.accesscontrolmaxage=100"
          - "traefik.http.middlewares.api_service_cors.headers.addvaryheader=true"
          - "traefik.http.routers.api_service.middlewares=api_service_stripprefix,api_service_cors"
        build:
          context: .
          dockerfile: OrderServices/Dockerfile
      
        pull_policy: missing
        healthcheck:
          test: curl --fail -s http://localhost|| exit 1
          start_period: 5s
          interval: 5s
          timeout: 10s
          retries: 3
        networks:
          - api_network
        volumes:
          - /var/log/api_service/prod/:/src/app/logs
          - /var/log/api_service/prod/:/var/logs
